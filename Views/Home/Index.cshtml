@using BookstoreTester.Mvc.Enums
@model BookstoreTester.Mvc.DTOs.BookRequestDto

@{
    ViewData["Title"] = "Bookstore Tester";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">

<div class="container-fluid py-4">
    <div class="controls-panel d-flex flex-wrap align-items-center gap-3 mb-4">
        <div class="d-flex align-items-center gap-2">
            <label for="languageSelect" class="form-label mb-0">Language</label>
            <select asp-for="Language" class="form-control" id="languageSelect">
                <option value="@BookLanguages.English">English</option>
                <option value="@BookLanguages.Russian">Русский</option>
                <option value="@BookLanguages.Japanese">日本語</option>
            </select>
        </div>

        <div class="d-flex align-items-center gap-2">
            <label for="seedInput" class="form-label mb-0">Seed</label>
            <div class="input-group">
                <input type="number" id="seedInput" class="form-control" value="@Model.Seed">
                <button class="btn btn-outline-secondary" type="button" id="randomSeedBtn">
                    <i class="bi bi-shuffle"></i>
                </button>
            </div>
        </div>

        <div class="d-flex align-items-center gap-2">
            <label for="likesSlider" class="form-label mb-0 text-nowrap">Likes: <span id="likesValue">@Model.Likes</span></label>
            <input type="range" class="form-range" id="likesSlider" min="0" max="10" step="0.1" value="@Model.Likes">
        </div>

        <div class="d-flex align-items-center gap-2">
            <label for="reviewInput" class="form-label mb-0">Review</label>
            <input type="number" id="reviewInput" class="form-control" value="@Model.Reviews" step="0.1">
        </div>

        <div class="ms-auto d-flex gap-2">
            <button class="btn btn-primary active" type="button" id="tableViewBtn">
                <i class="bi bi-list-ul"></i>
            </button>
            <button class="btn btn-secondary" type="button" id="galleryViewBtn">
                <i class="bi bi-grid-fill"></i>
            </button>
        </div>
    </div>

    <div id="contentContainer">
        <div class="table-responsive" id="tableContainer">
            <table class="table table-hover" id="books-table">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">ISBN</th>
                        <th scope="col">Title</th>
                        <th scope="col">Author(s)</th>
                        <th scope="col">Publisher</th>
                    </tr>
                </thead>
                <tbody id="books-table-body">
                </tbody>
            </table>
        </div>
        <div id="galleryContainer" class="d-none">
            <div id="books-gallery" class="row g-4 mt-3"></div>
        </div>
    </div>

    <div class="loading-indicator text-center py-5 d-none">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
</div>

<div class="modal fade" id="bookDetailsModal" tabindex="-1" aria-labelledby="bookDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookDetailsModalLabel">Детали книги</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-4">
                        <img id="modalBookCover" src="" class="img-fluid rounded" alt="Обложка книги">
                    </div>
                    <div class="col-md-8">
                        <h3 id="modalBookTitle"></h3>
                        <p class="text-muted">Автор(ы): <span id="modalBookAuthors"></span></p>
                        <p>Издательство: <span id="modalBookPublisher"></span></p>
                        <p>ISBN: <span id="modalBookIsbn"></span></p>
                        <p>Лайки: <span id="modalBookLikes"></span></p>
                        <h5>Отзывы:</h5>
                        <div id="modalBookReviews"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    let booksData = [];
    let myModal;

    const pageSize = 20;

    $(document).ready(function () {
        myModal = new bootstrap.Modal(document.getElementById('bookDetailsModal'));

        const fetchAndRenderBooks = () => {
            const seed = $('#seedInput').val();
            const language = $('#languageSelect').val();
            const likes = $('#likesSlider').val();
            const reviews = $('#reviewInput').val();

            const url = `api/books?Seed=${seed}&Language=${language}&Likes=${likes}&Reviews=${reviews}&PageSize=${pageSize}&PageNumber=1`;

            $('.loading-indicator').removeClass('d-none');
            $('#contentContainer').addClass('d-none');

            $.ajax({
                url: url,
                method: 'GET',
                success: function (data) {
                    booksData = data;
                    renderTable(booksData);
                    renderGallery(booksData);
                    $('.loading-indicator').addClass('d-none');
                    $('#contentContainer').removeClass('d-none');
                },
                error: function () {
                    $('.loading-indicator').addClass('d-none');
                    alert('Ошибка при загрузке книг.');
                }
            });
        };

        const renderTable = (books) => {
            const tbody = $('#books-table-body');
            tbody.empty();
            let tableRowsHtml = '';
            books.forEach(book => {
                const authors = book.authors.join(', ');
                tableRowsHtml += `
                    <tr>
                        <th scope="row">${book.index}</th>
                        <td>${book.isbn}</td>
                        <td>${book.title}</td>
                        <td>${authors}</td>
                        <td>${book.publisher}</td>
                    </tr>
                `;
            });
            tbody.append(tableRowsHtml);
        };

        const renderGallery = (books) => {
            const gallery = $('#books-gallery');
            gallery.empty();
            let galleryCardsHtml = '';
            books.forEach((book, index) => {
                const authors = book.authors.join(', ');
                galleryCardsHtml += `
                    <div class="col-6 col-md-4 col-lg-3">
                        <div class="card h-100 book-card" data-book-index="${index}">
                            <img src="${book.coverImageUrl}" class="card-img-top" alt="${book.title}">
                            <div class="card-body">
                                <h5 class="card-title">${book.title}</h5>
                                <p class="card-text text-muted">${authors}</p>
                                <p class="card-text">Likes: ${book.likes}</p>
                            </div>
                        </div>
                    </div>
                `;
            });
            gallery.append(galleryCardsHtml);
        };

        $(document).on('click', '.book-card', function() {
            const bookIndex = $(this).data('book-index');
            const book = booksData[bookIndex];

            $('#modalBookCover').attr('src', book.coverImageUrl);
            $('#modalBookTitle').text(book.title);
            $('#modalBookAuthors').text(book.authors.join(', '));
            $('#modalBookPublisher').text(book.publisher);
            $('#modalBookIsbn').text(book.isbn);
            $('#modalBookLikes').text(book.likes);

            const reviewsContainer = $('#modalBookReviews');
            reviewsContainer.empty();
            if (book.reviews && book.reviews.length > 0) {
                let reviewsHtml = '';
                book.reviews.forEach(review => {
                    reviewsHtml += `<p><strong>${review.author}</strong>: ${review.text}</p>`;
                });
                reviewsContainer.append(reviewsHtml);
            } else {
                reviewsContainer.append('<p>Отзывов нет.</p>');
            }

            myModal.show();
        });

        $('#tableViewBtn').on('click', function() {
            $('#tableContainer').removeClass('d-none');
            $('#galleryContainer').addClass('d-none');
            $(this).addClass('active');
            $('#galleryViewBtn').removeClass('active');
        });

        $('#galleryViewBtn').on('click', function() {
            $('#galleryContainer').removeClass('d-none');
            $('#tableContainer').addClass('d-none');
            $(this).addClass('active');
            $('#tableViewBtn').removeClass('active');
        });

        $('#languageSelect, #likesSlider, #reviewInput').on('change', fetchAndRenderBooks);
        $('#seedInput').on('input', fetchAndRenderBooks);

        $('#randomSeedBtn').on('click', function() {
            const newSeed = Math.floor(Math.random() * 10000);
            $('#seedInput').val(newSeed);
            fetchAndRenderBooks();
        });

        fetchAndRenderBooks();
    });
</script>